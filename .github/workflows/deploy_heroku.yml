name: Deploy Heroku

on:
  workflow_run:
    workflows:
      - Test
    branches:
      - main
      - develop
    types:
      - completed
  workflow_dispatch:

env:
  DOCKER_REGISTRY_HOST: ${{ secrets.DOCKER_REGISTRY_HOST }}
  DOCKER_REGISTRY_USERNAME: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
  DOCKER_REGISTRY_TOKEN: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
  DOCKER_IMAGE: ${{ secrets.DOCKER_IMAGE }}
  HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
  POSTGRES_DATABASE: ${{ secrets.POSTGRES_DATABASE }}
  POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
  SECRET_KEY_BASE: ${{ secrets.SECRET_KEY_BASE }}
  PORT: ${{ secrets.PORT }}
  CI: ${{ secrets.CI }}
  TEST_RETRY: ${{ secrets.TEST_RETRY }}
  PRODUCTION_HOST: ${{ secrets.PRODUCTION_HOST }}
  STAGING_HOST: ${{ secrets.STAGING_HOST }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'workflow_run' || github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.6.0
        with:
          access_token: ${{ github.token }}

      - uses: actions/checkout@v2.3.4
        with:
          ref: ${{ github.event.workflow_run.head_branch || github.ref }}

      - name: Set env BRANCH_TAG
        uses: nimblehq/branch-tag-action@v1.2
        with:
          ref: ${{ github.event.workflow_run.head_branch || github.ref }}

      - name: Set env HEROKU_APP
        run: |
          if [[ $BRANCH_TAG = "latest" ]]
          then
            echo "HEROKU_APP=search-analytics-production" >> $GITHUB_ENV
          else
            echo "HEROKU_APP=search-analytics-staging" >> $GITHUB_ENV
          fi

      - name: Login to Docker registry
        uses: docker/login-action@v1.6.0
        with:
          registry: ${{ env.DOCKER_REGISTRY_HOST }}
          username: ${{ env.DOCKER_REGISTRY_USERNAME }}
          password: ${{ env.DOCKER_REGISTRY_TOKEN }}

      - name: Build Docker image
        run: chmod +x bin/docker-prepare && bin/docker-prepare && docker compose build

      - name: Push Docker image
        run: docker compose push web

      - name: Login to Heroku
        run: heroku container:login

      - name: Push web images to Heroku
        run: heroku container:push web --arg DOCKER_REGISTRY_HOST=$DOCKER_REGISTRY_HOST,DOCKER_IMAGE=$DOCKER_IMAGE,BRANCH_TAG=$BRANCH_TAG

      - name: Push worker images to Heroku
        run: heroku container:push worker --arg DOCKER_REGISTRY_HOST=$DOCKER_REGISTRY_HOST,DOCKER_IMAGE=$DOCKER_IMAGE,BRANCH_TAG=$BRANCH_TAG

      - name: Release web
        run: heroku container:release web worker
